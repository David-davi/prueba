/*TABLA DEPARTAMENTO*/
CREATE TABLE DEPARTAMENTO (
    ID_DEPTO     NUMBER(9),
    DEPARTAMENTO VARCHAR2(150),
    CONSTRAINT PK_DEPARTAMENTO PRIMARY KEY (ID_DEPTO)
);

CREATE SEQUENCE SQC_DEPARTAMENTO
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;


/*TABLA CABECERA*/
CREATE TABLE CABECERA (
    ID_CABECERA NUMBER(9),
    CABECERA    VARCHAR2(150),
    ID_DEPTO    NUMBER(9),
    CONSTRAINT PK_CABECERA PRIMARY KEY (ID_CABECERA),
    CONSTRAINT FK_DEPTO_ID FOREIGN KEY (ID_DEPTO) REFERENCES DEPARTAMENTO (ID_DEPTO)
);


CREATE SEQUENCE SQC_CABECERA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA TIPO_VIAJE*/
CREATE TABLE TIPO_VIAJE (
    ID_TIPO_VIAJE NUMBER(9),
    TIPO          VARCHAR2(150),
    CONSTRAINT PK_TIPO PRIMARY KEY (ID_TIPO_VIAJE)
);

CREATE SEQUENCE SQC_TIPO_VIAJE
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA CATEGORIA*/
CREATE TABLE CATEGORIA (
    ID_CATEGORIA NUMBER(9),
    CATEGORIA    VARCHAR2(150),
    CONSTRAINT PK_CATEGORIA PRIMARY KEY (ID_CATEGORIA)
);

CREATE SEQUENCE SQC_CATEGORIA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA TIPO_PLACA*/
CREATE TABLE TIPO_PLACA (
    ID_TIPO_PLACA NUMBER(9),
    TIPO_PLACA    VARCHAR2(150),
    CONSTRAINT PK_TIPO_PLACA PRIMARY KEY (ID_TIPO_PLACA)
);

CREATE SEQUENCE SQC_TIPO_PLACA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA MARCA*/
CREATE TABLE MARCA (
    ID_MARCA NUMBER(9),
    MARCA    VARCHAR2(150),
    CONSTRAINT PK_MARCA PRIMARY KEY (ID_MARCA)
);

CREATE SEQUENCE SQC_MARCA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA LINEA*/
CREATE TABLE LINEA (
    ID_LINEA NUMBER(9),
    LINEA    VARCHAR2(150),
    ID_MARCA NUMBER(9),
    CONSTRAINT PK_LINEA PRIMARY KEY (ID_LINEA),
    CONSTRAINT FK_MARCA FOREIGN KEY (ID_MARCA) REFERENCES MARCA (ID_MARCA)
);

CREATE SEQUENCE SQC_LINEA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA COLOR*/
CREATE TABLE COLOR (
    ID_COLOR NUMBER(9),
    COLOR    VARCHAR2(150),
    CONSTRAINT PK_COLOR PRIMARY KEY (ID_COLOR)
);

CREATE SEQUENCE SQC_COLOR
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA TIPO_BUS*/
CREATE TABLE TIPO_BUS (
    ID_TIPO_BUS NUMBER(9),
    TIPO_BUS    VARCHAR2(150),
    CONSTRAINT PK_TIPO_BUS PRIMARY KEY (ID_TIPO_BUS)
);

CREATE SEQUENCE SQC_TIPO_BUS
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA BUS*/
CREATE TABLE BUS (
    ID_BUS        NUMBER(9),
    PLACA         VARCHAR2(8),
    ANIO          VARCHAR2(4),
    NO_PASAJEROS  NUMBER(3),
    ESTADO_BUS    VARCHAR2(1),
    ID_TIPO_BUS   NUMBER(9),
    ID_TIPO_PLACA NUMBER(9),
    ID_COLOR      NUMBER(9),
    ID_LINEA      NUMBER(9),
    CONSTRAINT PK_BUS PRIMARY KEY (ID_BUS),
    CONSTRAINT FK_BUS_TIPO FOREIGN KEY (ID_TIPO_BUS)REFERENCES TIPO_BUS (ID_TIPO_BUS),
    CONSTRAINT FK_PLACA_TIPO FOREIGN KEY (ID_TIPO_PLACA ) REFERENCES TIPO_PLACA (ID_TIPO_PLACA),
    CONSTRAINT FK_COLOR FOREIGN KEY (ID_COLOR) REFERENCES COLOR (ID_COLOR),
    CONSTRAINT FK_LINEA FOREIGN KEY (ID_LINEA) REFERENCES LINEA (ID_LINEA)
);

CREATE SEQUENCE SQC_BUS
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA TIPO_LICENCIA*/
CREATE TABLE TIPO_LICENCIA (
    ID_TIPO_LICENCIA NUMBER(9),
    TIPO_LICENCIA    VARCHAR2(1),
    ESTADO_LICENCIA  VARCHAR2(1),
    CONSTRAINT PK_TIPO_LICENCIA PRIMARY KEY ( ID_TIPO_LICENCIA )
);

CREATE SEQUENCE SQC_TIPO_LICENCIA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;   

/*TABLA PILOTO*/
CREATE TABLE PILOTO (
    ID_PILOTO        NUMBER(9),
    NOMBRE           VARCHAR2(1),
    APELLIDO         VARCHAR2(1),
    ESTADO_PILOTO    VARCHAR2(1),
    NO_LICENCIA      NUMBER(13),
    ID_TIPO_LICENCIA NUMBER(9),
    CONSTRAINT PK_PILOTO PRIMARY KEY ( ID_PILOTO ),
    CONSTRAINT FK_LICENCIA_TIPO FOREIGN KEY ( ID_TIPO_LICENCIA ) REFERENCES TIPO_LICENCIA ( ID_TIPO_LICENCIA )
);

CREATE SEQUENCE SQC_PILOTO
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;   

/*TABLA VIAJE*/
CREATE TABLE VIAJE (
    ID_VIAJE            NUMBER(9),
    ID_CABECERA_INICIO   NUMBER(9),
    ID_CABECERA_DESTINO NUMBER(9),
    ID_TIPO_VIAJE       NUMBER(9),
    ID_PILOTO           NUMBER(9),
    ID_BUS              NUMBER(9),
    ID_CATEGORIA        NUMBER(9),
    ESCALA              VARCHAR2(1),
    FECHA_HORA_SALIDA   TIMESTAMP,
    FECHA_HORA_LLEGADA  TIMESTAMP,
    CONSTRAINT PK_VIAJE PRIMARY KEY ( ID_VIAJE ),
    CONSTRAINT FK_CABCERA_INICIO FOREIGN KEY ( ID_CABECERA_INICIO ) REFERENCES CABECERA ( ID_CABECERA ),
    CONSTRAINT FK_CABECERA_DESTINO FOREIGN KEY ( ID_CABECERA_DESTINO ) REFERENCES CABECERA ( ID_CABECERA ),
    CONSTRAINT FK_VIAJE_TIPO FOREIGN KEY ( ID_TIPO_VIAJE )REFERENCES TIPO_VIAJE ( ID_TIPO_VIAJE ),
    CONSTRAINT FK_PILOTO FOREIGN KEY ( ID_PILOTO ) REFERENCES PILOTO ( ID_PILOTO ),
    CONSTRAINT FK_BUS FOREIGN KEY ( ID_BUS ) REFERENCES BUS ( ID_BUS ),
    CONSTRAINT FK_CATEGORIA FOREIGN KEY ( ID_CATEGORIA ) REFERENCES CATEGORIA ( ID_CATEGORIA )
);

CREATE SEQUENCE SQC_VIAJE
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA ESCALA_VIAJE*/
CREATE TABLE ESCALA_VIAJE (
    ID_ESCALA_VIAJE NUMBER(9),
    ID_VIAJE        NUMBER(9),
    ID_CABECERA_ESCALA NUMBER(9),
    CONSTRAINT PK_ESCALA PRIMARY KEY ( ID_ESCALA_VIAJE ),
    CONSTRAINT FK_VIAJE FOREIGN KEY ( ID_VIAJE ) REFERENCES VIAJE ( ID_VIAJE ),
    CONSTRAINT FK_CABECERA FOREIGN KEY ( ID_CABECERA_ESCALA ) REFERENCES CABECERA ( ID_CABECERA )
);

CREATE SEQUENCE SQC_ESCALA_VIAJE
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;   

/*TABLA ENCOMIENDA*/
CREATE TABLE ENCOMIENDA (
    ID_ENCOMIENDA       NUMBER(9),
    ID_VIAJE            NUMBER(9),
    PESO                NUMBER(13, 2),
    PRECIO              NUMBER(13, 2),
    DESCRIPCION         VARCHAR2(150),
    NOMBRE_REMITENTE    VARCHAR2(150),
    NOMBRE_DESTINATARIO VARCHAR2(150),
    TELEFONO            NUMBER(8),
    CONSTRAINT PK_ENCOMIENDA PRIMARY KEY ( ID_ENCOMIENDA ),
    CONSTRAINT FK_ENCOMIENDA_VIAJE FOREIGN KEY ( ID_VIAJE ) REFERENCES VIAJE ( ID_VIAJE )
);

CREATE SEQUENCE SQC_ENCOMIENDA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA TIPO_PAGO*/
CREATE TABLE TIPO_PAGO (
    ID_TIPO_PAGO NUMBER(9),
    TIPO_PAGO    VARCHAR2(150),
    BANCO        VARCHAR2(150),
    CONSTRAINT PK_TIPO_PAGO PRIMARY KEY ( ID_TIPO_PAGO )
);

CREATE SEQUENCE SQC_TIPO_PAGO
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA ESTADO_RESERVACION*/
CREATE TABLE ESTADO_RESERVACION (
    ID_ESTADO_RESERVA NUMBER(9),
    ESTADO            VARCHAR2(150),
    CONSTRAINT PK_ESTADO_RESERVA PRIMARY KEY ( ID_ESTADO_RESERVA )
);

CREATE SEQUENCE SQC_ESTADO_RESERVACION
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA AUTORIZA_RESERVA*/
CREATE TABLE AUTORIZA_RESERVA (
    CORRELATIVO       NUMBER(9),
    ID_TIPO_PAGO      NUMBER(9),
    ID_ESTADO_RESERVA NUMBER(9),
    AUTORIZADO_POR    VARCHAR2(150),
    FECHA             DATE,
    CONSTRAINT PK_AUTORIZA_RESERVA PRIMARY KEY ( CORRELATIVO ),
    CONSTRAINT FK_PAGO_TIPO FOREIGN KEY ( ID_TIPO_PAGO ) REFERENCES TIPO_PAGO ( ID_TIPO_PAGO ),
    CONSTRAINT FK_ESTADO_RESER FOREIGN KEY ( ID_ESTADO_RESERVA ) REFERENCES ESTADO_RESERVACION ( ID_ESTADO_RESERVA )
);

CREATE SEQUENCE SQC_AUTORIZA_RESERVA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA RESERVACION*/
CREATE TABLE RESERVACION (
    ID_RESERVACION    NUMBER(9),
    ID_ESTADO_RESERVA NUMBER(9),
    ID_VIAJE          NUMBER(9),
    ID_TIPO_PAGO      NUMBER(9),
    NOMBRE            VARCHAR2(150),
    APELLIDO          VARCHAR2(150),
    IMAGEN            BFILE,
    ASIENTO           NUMBER(3),
    CONSTRAINT PK_RESERVACION PRIMARY KEY ( ID_RESERVACION ),
    CONSTRAINT FK_ID_ESTADO_RESER FOREIGN KEY ( ID_ESTADO_RESERVA )REFERENCES ESTADO_RESERVACION ( ID_ESTADO_RESERVA ),
    CONSTRAINT FK_VIAJE_RESER FOREIGN KEY ( ID_VIAJE )REFERENCES VIAJE ( ID_VIAJE ),
    CONSTRAINT FK_TIPO_PAGO_RESER FOREIGN KEY ( ID_TIPO_PAGO )  REFERENCES TIPO_PAGO ( ID_TIPO_PAGO )
);

CREATE SEQUENCE SQC_RESERVACION
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;


/*TABLA DETALLE_RESERVACION*/
CREATE TABLE DETALLE_RESERVACION (
    ID_DETALLE_RESERVA NUMBER(9),
    ID_RESERVACION     NUMBER(9),
    ID_ENCOMIENDA      NUMBER(9),
    PASAJERO           NUMBER(3),
    TOTAL              NUMBER(13, 2),
    CONSTRAINT PK_DETALLE_RESERVA PRIMARY KEY ( ID_DETALLE_RESERVA ),
    CONSTRAINT FK_RESERVA_DETA FOREIGN KEY ( ID_RESERVACION ) REFERENCES RESERVACION ( ID_RESERVACION ),
    CONSTRAINT FK_ENCOMIENDA_DETA FOREIGN KEY ( ID_ENCOMIENDA )REFERENCES ENCOMIENDA ( ID_ENCOMIENDA )
);

CREATE SEQUENCE SQC_DETALLE_RESERVACION
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA DETALLE_PAGO*/
CREATE TABLE DETALLE_PAGO (
    ID_DETALLE_PAGO NUMBER(9),
    ID_RESERVACION  NUMBER(9),
    CANTIDAD        NUMBER(10),
    PRECIO          NUMBER(10, 2),
    SERIE           VARCHAR2(30),
    CONSTRAINT PK_DETALLE_PAGO PRIMARY KEY ( ID_DETALLE_PAGO ),
    CONSTRAINT FK_RESERVA FOREIGN KEY ( ID_RESERVACION ) REFERENCES RESERVACION ( ID_RESERVACION )
);

CREATE SEQUENCE SQC_DETALLE_PAGO
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;

/*TABLA BITACORA*/
CREATE TABLE BITACORA(
    CORRELATIVO      NUMBER(15),
    NOMBRE_TABLA     VARCHAR2(100),
    ATRIBUTO         VARCHAR2(100),
    VALOR_ANTIGUO    VARCHAR2(150),
    VALOR_NUEVO      VARCHAR2(150),
    USUARIO          VARCHAR2(100),
    FECHA            DATE,
    IP               VARCHAR2(30),
    TIPO_ACCION      VARCHAR2(100),
    CONSTRAINT PK_BITACORA PRIMARY KEY ( CORRELATIVO )
);

CREATE SEQUENCE SQC_BITACORA
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999999999999999999999
MINVALUE 1
CACHE 20
NOCYCLE
NOORDER;



/*SE CREAN LOS TRIGGERS PARA CADA TABLA CON SU INSERT, UPDATE Y DELETE*/

/*TRIGGER DE LA TABLA DEPRTAMENTO*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_DEPARTAMENTO
BEFORE INSERT ON DEPARTAMENTO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_DEPTO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DEPARTAMENTO','ID_DEPTO','',:NEW.ID_DEPTO,USER,SYSDATE,DIREC,'INSERT');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.DEPARTAMENTO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DEPARTAMENTO','DEPARTAMENTO','',:NEW.DEPARTAMENTO,USER,SYSDATE,DIREC,'INSERT');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_DEPARTAMENTO
BEFORE UPDATE ON DEPARTAMENTO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_DEPTO = :OLD.ID_DEPTO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DEPARTAMENTO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DEPARTAMENTO','ID_DEPTO',:OLD.ID_DEPTO,:NEW.ID_DEPTO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.DEPARTAMENTO = :OLD.DEPARTAMENTO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DEPARTAMENTO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DEPARTAMENTO','DEPARTAMENTO',:OLD.DEPARTAMENTO,:NEW.DEPARTAMENTO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_DEPARTAMENTO
BEFORE DELETE ON DEPARTAMENTO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DEPARTAMENTO','ID_DEPTO',:OLD.ID_DEPTO,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DEPARTAMENTO','DEPARTAMENTO',:OLD.DEPARTAMENTO,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA CABECERA*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_CABECERA
BEFORE INSERT ON CABECERA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_CABECERA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','ID_CABECERA','',:NEW.ID_CABECERA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA CABECERA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.CABECERA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','CABECERA','',:NEW.CABECERA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA CABECERA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_DEPTO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','ID_DEPTO','',:NEW.ID_DEPTO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA CABECERA');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_CABECERA
BEFORE UPDATE ON CABECERA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_CABECERA = :OLD.ID_CABECERA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA CABECERA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','ID_CABECERA',:OLD.ID_CABECERA,:NEW.ID_CABECERA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.CABECERA = :OLD.CABECERA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA CABECERA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','CABECERA',:OLD.CABECERA,:NEW.CABECERA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_DEPTO = :OLD.ID_DEPTO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA CABECERA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','ID_DEPTO',:OLD.ID_DEPTO,:NEW.ID_DEPTO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_CABECERA
BEFORE DELETE ON CABECERA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','ID_CABECERA',:OLD.ID_CABECERA,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','CABECERA',:OLD.CABECERA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CABECERA','ID_DEPTO',:OLD.ID_DEPTO,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TIPO_VIAJE*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_TIPO_VIAJE
BEFORE INSERT ON TIPO_VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_VIAJE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_VIAJE','ID_TIPO_VIAJE','',:NEW.ID_TIPO_VIAJE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_VIAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.TIPO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_VIAJE','TIPO','',:NEW.TIPO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_VIAJE');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_TIPO_VIAJE
BEFORE UPDATE ON TIPO_VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_TIPO_VIAJE = :OLD.ID_TIPO_VIAJE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_VIAJE');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_VIAJE','ID_TIPO_VIAJE',:OLD.ID_TIPO_VIAJE,:NEW.ID_TIPO_VIAJE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.TIPO = :OLD.TIPO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_VIAJE');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_VIAJE','TIPO',:OLD.TIPO,:NEW.TIPO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_TIPO_VIAJE
BEFORE DELETE ON TIPO_VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_VIAJE','ID_TIPO_VIAJE',:OLD.ID_TIPO_VIAJE,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_VIAJE','TIPO',:OLD.TIPO,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA CATEGORIA*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_CATEGORIA
BEFORE INSERT ON CATEGORIA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_CATEGORIA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CATEGORIA','ID_CATEGORIA','',:NEW.ID_CATEGORIA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA CATEGORIA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.CATEGORIA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CATEGORIA','CATEGORIA','',:NEW.CATEGORIA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA CATEGORIA');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_CATEGORIA
BEFORE UPDATE ON CATEGORIA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_CATEGORIA = :OLD.ID_CATEGORIA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA CATEGORIA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CATEGORIA','ID_CATEGORIA',:OLD.ID_CATEGORIA,:NEW.ID_CATEGORIA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.CATEGORIA = :OLD.CATEGORIA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA CATEGORIA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CATEGORIA','CATEGORIA',:OLD.CATEGORIA,:NEW.CATEGORIA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_CATEGORIA
BEFORE DELETE ON CATEGORIA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CATEGORIA','ID_CATEGORIA',:OLD.ID_CATEGORIA,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'CATEGORIA','CATEGORIA',:OLD.CATEGORIA,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA TIPO_PLACA*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_TIPO_PLACA
BEFORE INSERT ON TIPO_PLACA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_PLACA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PLACA','ID_TIPO_PLACA','',:NEW.ID_TIPO_PLACA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_PLACA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.TIPO_PLACA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PLACA','TIPO_PLACA','',:NEW.TIPO_PLACA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_PLACA');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_TIPO_PLACA
BEFORE UPDATE ON TIPO_PLACA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_TIPO_PLACA = :OLD.ID_TIPO_PLACA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_PLACA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PLACA','ID_TIPO_PLACA',:OLD.ID_TIPO_PLACA,:NEW.ID_TIPO_PLACA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.TIPO_PLACA = :OLD.TIPO_PLACA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_PLACA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PLACA','TIPO_PLACA',:OLD.TIPO_PLACA,:NEW.TIPO_PLACA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_TIPO_PLACA
BEFORE DELETE ON TIPO_PLACA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PLACA','ID_TIPO_PLACA',:OLD.ID_TIPO_PLACA,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PLACA','TIPO_PLACA',:OLD.TIPO_PLACA,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA MARCA*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_MARCA
BEFORE INSERT ON MARCA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_MARCA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'MARCA','ID_MARCA','',:NEW.ID_MARCA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA MARCA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.MARCA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'MARCA','MARCA','',:NEW.MARCA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA MARCA');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_MARCA
BEFORE UPDATE ON MARCA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_MARCA = :OLD.ID_MARCA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA MARCA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'MARCA','ID_MARCA',:OLD.ID_MARCA,:NEW.ID_MARCA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.MARCA = :OLD.MARCA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA MARCA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'MARCA','MARCA',:OLD.MARCA,:NEW.MARCA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_MARCA
BEFORE DELETE ON MARCA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'MARCA','ID_MARCA',:OLD.ID_MARCA,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'MARCA','MARCA',:OLD.MARCA,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA LINEA*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_LINEA
BEFORE INSERT ON LINEA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_LINEA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','ID_LINEA','',:NEW.ID_LINEA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA LINEA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.LINEA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','LINEA','',:NEW.LINEA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA LINEA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_MARCA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','ID_MARCA','',:NEW.ID_MARCA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA LINEA');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_LINEA
BEFORE UPDATE ON LINEA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_LINEA = :OLD.ID_LINEA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA LINEA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','ID_LINEA',:OLD.ID_LINEA,:NEW.ID_LINEA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.LINEA = :OLD.LINEA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA LINEA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','LINEA',:OLD.LINEA,:NEW.LINEA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_MARCA = :OLD.ID_MARCA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA LINEA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','ID_MARCA',:OLD.ID_MARCA,:NEW.ID_MARCA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_LINEA
BEFORE DELETE ON LINEA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','ID_LINEA',:OLD.ID_LINEA,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','LINEA',:OLD.LINEA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'LINEA','ID_MARCA',:OLD.ID_MARCA,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA COLOR*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_COLOR
BEFORE INSERT ON COLOR
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_COLOR IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'COLOR','ID_COLOR','',:NEW.ID_COLOR,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA COLOR');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.COLOR IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'COLOR','COLOR','',:NEW.COLOR,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA COLOR');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_COLOR
BEFORE UPDATE ON COLOR
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_COLOR = :OLD.ID_COLOR THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA COLOR');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'COLOR','ID_COLOR',:OLD.ID_COLOR,:NEW.ID_COLOR,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.COLOR = :OLD.COLOR THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA COLOR');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'COLOR','COLOR',:OLD.COLOR,:NEW.COLOR,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_COLOR
BEFORE DELETE ON COLOR
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'COLOR','ID_COLOR',:OLD.ID_COLOR,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'COLOR','COLOR',:OLD.COLOR,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA TIPO_BUS*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_TIPO_BUS
BEFORE INSERT ON TIPO_BUS
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_BUS IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_BUS','ID_TIPO_BUS','',:NEW.ID_TIPO_BUS,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.TIPO_BUS IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_BUS','TIPO_BUS','',:NEW.TIPO_BUS,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_BUS');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_TIPO_BUS
BEFORE UPDATE ON TIPO_BUS
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_TIPO_BUS = :OLD.ID_TIPO_BUS THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_BUS','ID_TIPO_BUS',:OLD.ID_TIPO_BUS,:NEW.ID_TIPO_BUS,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.TIPO_BUS = :OLD.TIPO_BUS THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_BUS','TIPO_BUS',:OLD.TIPO_BUS,:NEW.TIPO_BUS,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_TIPO_BUS
BEFORE DELETE ON TIPO_BUS
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_BUS','ID_TIPO_BUS',:OLD.ID_TIPO_BUS,'',USER,SYSDATE,DIREC,'DELETE');
    
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_BUS','TIPO_BUS',:OLD.TIPO_BUS,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA BUS*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_BUS
BEFORE INSERT ON BUS
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_BUS IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_BUS','',:NEW.ID_BUS,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.PLACA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','PLACA','',:NEW.PLACA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ANIO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ANIO','',:NEW.ANIO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.NO_PASAJEROS IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','NO_PASAJEROS','',:NEW.NO_PASAJEROS,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ESTADO_BUS IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ESTADO_BUS','',:NEW.ESTADO_BUS,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_BUS IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_TIPO_BUS','',:NEW.ID_TIPO_BUS,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_PLACA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_TIPO_PLACA','',:NEW.ID_TIPO_PLACA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_COLOR IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_COLOR','',:NEW.ID_COLOR,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_LINEA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_LINEA','',:NEW.ID_LINEA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA BUS');
        END IF;
        
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_BUS
BEFORE UPDATE ON BUS
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_BUS = :OLD.ID_BUS THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_BUS',:OLD.ID_BUS,:NEW.ID_BUS,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.PLACA = :OLD.PLACA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','PLACA',:OLD.PLACA,:NEW.PLACA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ANIO = :OLD.ANIO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ANIO',:OLD.ANIO,:NEW.ANIO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.NO_PASAJEROS = :OLD.NO_PASAJEROS THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','NO_PASAJEROS',:OLD.NO_PASAJEROS,:NEW.NO_PASAJEROS,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ESTADO_BUS = :OLD.ESTADO_BUS THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ESTADO_BUS',:OLD.ESTADO_BUS,:NEW.ESTADO_BUS,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_TIPO_BUS = :OLD.ID_TIPO_BUS THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_TIPO_BUS',:OLD.ID_TIPO_BUS,:NEW.ID_TIPO_BUS,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_TIPO_PLACA = :OLD.ID_TIPO_PLACA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_TIPO_PLACA',:OLD.ID_TIPO_PLACA,:NEW.ID_TIPO_PLACA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_COLOR = :OLD.ID_COLOR THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_COLOR',:OLD.ID_COLOR,:NEW.ID_COLOR,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_LINEA = :OLD.ID_LINEA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_LINEA',:OLD.ID_LINEA,:NEW.ID_LINEA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;     
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_BUS
BEFORE DELETE ON BUS
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_BUS',:OLD.ID_BUS,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','PLACA',:OLD.PLACA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ANIO',:OLD.ANIO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','NO_PASAJEROS',:OLD.NO_PASAJEROS,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ESTADO_BUS',:OLD.ESTADO_BUS,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_TIPO_BUS',:OLD.ID_TIPO_BUS,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_TIPO_PLACA',:OLD.ID_TIPO_PLACA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_COLOR',:OLD.ID_COLOR,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'BUS','ID_LINEA',:OLD.ID_LINEA,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA TIPO_LICENCIA*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_TIPO_LICENCIA
BEFORE INSERT ON TIPO_LICENCIA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_LICENCIA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','ID_TIPO_LICENCIA','',:NEW.ID_TIPO_LICENCIA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_LICENCIA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.TIPO_LICENCIA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','TIPO_LICENCIA','',:NEW.TIPO_LICENCIA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_LICENCIA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ESTADO_LICENCIA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','ESTADO_LICENCIA','',:NEW.ESTADO_LICENCIA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_LICENCIA');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_TIPO_LICENCIA
BEFORE UPDATE ON TIPO_LICENCIA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_TIPO_LICENCIA = :OLD.ID_TIPO_LICENCIA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_LICENCIA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','ID_TIPO_LICENCIA',:OLD.ID_TIPO_LICENCIA,:NEW.ID_TIPO_LICENCIA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.TIPO_LICENCIA = :OLD.TIPO_LICENCIA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_LICENCIA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','TIPO_LICENCIA',:OLD.TIPO_LICENCIA,:NEW.TIPO_LICENCIA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ESTADO_LICENCIA = :OLD.ESTADO_LICENCIA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_LICENCIA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','ESTADO_LICENCIA',:OLD.ESTADO_LICENCIA,:NEW.ESTADO_LICENCIA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_TIPO_LICENCIA
BEFORE DELETE ON TIPO_LICENCIA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','ID_TIPO_LICENCIA',:OLD.ID_TIPO_LICENCIA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','TIPO_LICENCIA',:OLD.TIPO_LICENCIA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_LICENCIA','ESTADO_LICENCIA',:OLD.ESTADO_LICENCIA,'',USER,SYSDATE,DIREC,'DELETE');

END;


/*TRIGGER DE LA TABLA PILOTO*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_PILOTO
BEFORE INSERT ON PILOTO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_PILOTO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ID_PILOTO','',:NEW.ID_PILOTO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA PILOTO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.NOMBRE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','NOMBRE','',:NEW.NOMBRE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA PILOTO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.APELLIDO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','APELLIDO','',:NEW.APELLIDO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA PILOTO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ESTADO_PILOTO  IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ESTADO_PILOTO','',:NEW.ESTADO_PILOTO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA PILOTO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.NO_LICENCIA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','NO_LICENCIA','',:NEW.NO_LICENCIA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA PILOTO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_LICENCIA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ID_TIPO_LICENCIA','',:NEW.ID_TIPO_LICENCIA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA PILOTO');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_PILOTO
BEFORE UPDATE ON PILOTO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_PILOTO = :OLD.ID_PILOTO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA PILOTO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ID_PILOTO',:OLD.ID_PILOTO,:NEW.ID_PILOTO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.NOMBRE = :OLD.NOMBRE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA PILOTO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','NOMBRE',:OLD.NOMBRE,:NEW.NOMBRE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.APELLIDO = :OLD.APELLIDO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA PILOTO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','APELLIDO',:OLD.APELLIDO,:NEW.APELLIDO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ESTADO_PILOTO = :OLD.ESTADO_PILOTO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA PILOTO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ESTADO_PILOTO',:OLD.ESTADO_PILOTO,:NEW.ESTADO_PILOTO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.NO_LICENCIA = :OLD.NO_LICENCIA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA PILOTO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','NO_LICENCIA',:OLD.NO_LICENCIA,:NEW.NO_LICENCIA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_TIPO_LICENCIA = :OLD.ID_TIPO_LICENCIA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA PILOTO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ID_TIPO_LICENCIA',:OLD.ID_TIPO_LICENCIA,:NEW.ID_TIPO_LICENCIA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_PILOTO
BEFORE DELETE ON PILOTO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ID_PILOTO',:OLD.ID_PILOTO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','NOMBRE',:OLD.NOMBRE,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','APELLIDO',:OLD.APELLIDO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ESTADO_PILOTO',:OLD.ESTADO_PILOTO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','NO_LICENCIA',:OLD.NO_LICENCIA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'PILOTO','ID_TIPO_LICENCIA',:OLD.ID_TIPO_LICENCIA,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA VIAJE*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_VIAJE
BEFORE INSERT ON VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_VIAJE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_VIAJE','',:NEW.ID_VIAJE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_CABECERA_INICIO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CABECERA_INICIO','',:NEW.ID_CABECERA_INICIO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_CABECERA_DESTINO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CABECERA_DESTINO','',:NEW.ID_CABECERA_DESTINO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_VIAJE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_TIPO_VIAJE','',:NEW.ID_TIPO_VIAJE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_PILOTO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_PILOTO','',:NEW.ID_PILOTO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_BUS IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_BUS','',:NEW.ID_BUS,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_CATEGORIA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CATEGORIA','',:NEW.ID_CATEGORIA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ESCALA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ESCALA','',:NEW.ESCALA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.FECHA_HORA_SALIDA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','FECHA_HORA_SALIDA','',:NEW.FECHA_HORA_SALIDA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.FECHA_HORA_LLEGADA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','FECHA_HORA_LLEGADA','',:NEW.FECHA_HORA_LLEGADA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA VAJE');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_VIAJE
BEFORE UPDATE ON VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_VIAJE = :OLD.ID_VIAJE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_VIAJE',:OLD.ID_VIAJE,:NEW.ID_VIAJE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_CABECERA_INICIO = :OLD.ID_CABECERA_INICIO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CABECERA_INICIO',:OLD.ID_CABECERA_INICIO,:NEW.ID_CABECERA_INICIO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_CABECERA_DESTINO = :OLD.ID_CABECERA_DESTINO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CABECERA_DESTINO',:OLD.ID_CABECERA_DESTINO,:NEW.ID_CABECERA_DESTINO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_TIPO_VIAJE = :OLD.ID_TIPO_VIAJE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_TIPO_VIAJE',:OLD.ID_TIPO_VIAJE,:NEW.ID_TIPO_VIAJE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_PILOTO = :OLD.ID_PILOTO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_PILOTO',:OLD.ID_PILOTO,:NEW.ID_PILOTO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_BUS = :OLD.ID_BUS THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_BUS',:OLD.ID_BUS,:NEW.ID_BUS,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_CATEGORIA = :OLD.ID_CATEGORIA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CATEGORIA',:OLD.ID_CATEGORIA,:NEW.ID_CATEGORIA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ESCALA = :OLD.ESCALA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ESCALA',:OLD.ESCALA,:NEW.ESCALA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.FECHA_HORA_SALIDA = :OLD.FECHA_HORA_SALIDA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','FECHA_HORA_SALIDA',:OLD.FECHA_HORA_SALIDA,:NEW.FECHA_HORA_SALIDA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.FECHA_HORA_LLEGADA = :OLD.FECHA_HORA_LLEGADA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA BUS');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','FECHA_HORA_LLEGADA',:OLD.FECHA_HORA_LLEGADA,:NEW.FECHA_HORA_LLEGADA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_VIAJE
BEFORE DELETE ON VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_VIAJE',:OLD.ID_VIAJE,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CABECERA_INICIO',:OLD.ID_CABECERA_INICIO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CABECERA_DESTINO',:OLD.ID_CABECERA_DESTINO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_TIPO_VIAJE',:OLD.ID_TIPO_VIAJE,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_PILOTO',:OLD.ID_PILOTO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_BUS',:OLD.ID_BUS,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ID_CATEGORIA',:OLD.ID_CATEGORIA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','ESCALA',:OLD.ESCALA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','FECHA_HORA_SALIDA',:OLD.FECHA_HORA_SALIDA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'VIAJE','FECHA_HORA_LLEGADA',:OLD.FECHA_HORA_LLEGADA,'',USER,SYSDATE,DIREC,'DELETE');
            
END;


/*TRIGGER DE LA TABLA ESCALA_VIAJE*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_ESCALA_VIAJE
BEFORE INSERT ON ESCALA_VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_ESCALA_VIAJE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_ESCALA_VIAJE','',:NEW.ID_ESCALA_VIAJE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ESCALA_VIAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_VIAJE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_VIAJE','',:NEW.ID_VIAJE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ESCALA_VIAJE');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_CABECERA_ESCALA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_CABECERA_ESCALA','',:NEW.ID_CABECERA_ESCALA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ESCALA_VIAJE');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_ESCALA_VIAJE
BEFORE UPDATE ON ESCALA_VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_ESCALA_VIAJE = :OLD.ID_ESCALA_VIAJE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ESCALA_VIAJE');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_ESCALA_VIAJE',:OLD.ID_ESCALA_VIAJE,:NEW.ID_ESCALA_VIAJE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_VIAJE = :OLD.ID_VIAJE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ESCALA_VIAJE');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_VIAJE',:OLD.ID_VIAJE,:NEW.ID_VIAJE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_CABECERA_ESCALA = :OLD.ID_CABECERA_ESCALA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ESCALA_VIAJE');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_CABECERA_ESCALA',:OLD.ID_CABECERA_ESCALA,:NEW.ID_CABECERA_ESCALA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_ESCALA_VIAJE
BEFORE DELETE ON ESCALA_VIAJE
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_ESCALA_VIAJE',:OLD.ID_ESCALA_VIAJE,'',USER,SYSDATE,DIREC,'DELETE');

            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_VIAJE',:OLD.ID_VIAJE,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESCALA_VIAJE','ID_CABECERA_ESCALA',:OLD.ID_CABECERA_ESCALA,'',USER,SYSDATE,DIREC,'DELETE');            
END;


/*TRIGGER DE LA TABLA ENCOMIENDA*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_ENCOMIENDA
BEFORE INSERT ON ENCOMIENDA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_ENCOMIENDA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','ID_ENCOMIENDA','',:NEW.ID_ENCOMIENDA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ENCOMIENDA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_VIAJE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','ID_VIAJE','',:NEW.ID_VIAJE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ENCOMIENDA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.PESO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','PESO','',:NEW.PESO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ENCOMIENDA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.PRECIO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','PRECIO','',:NEW.PRECIO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ENCOMIENDA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.DESCRIPCION IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','DESCRIPCION','',:NEW.DESCRIPCION,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ENCOMIENDA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.NOMBRE_REMITENTE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','NOMBRE_REMITENTE','',:NEW.NOMBRE_REMITENTE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ENCOMIENDA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.NOMBRE_DESTINATARIO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','NOMBRE_DESTINATARIO','',:NEW.NOMBRE_DESTINATARIO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ENCOMIENDA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.TELEFONO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','TELEFONO','',:NEW.TELEFONO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ENCOMIENDA');
        END IF;
        
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_ENCOMIENDA
BEFORE UPDATE ON ENCOMIENDA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_ENCOMIENDA = :OLD.ID_ENCOMIENDA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ENCOMIENDA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','ID_ENCOMIENDA',:OLD.ID_ENCOMIENDA,:NEW.ID_ENCOMIENDA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_VIAJE = :OLD.ID_VIAJE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ENCOMIENDA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','ID_VIAJE',:OLD.ID_VIAJE,:NEW.ID_VIAJE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.PESO = :OLD.PESO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ENCOMIENDA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','PESO',:OLD.PESO,:NEW.PESO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.PRECIO = :OLD.PRECIO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ENCOMIENDA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','PRECIO',:OLD.PRECIO,:NEW.PRECIO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.DESCRIPCION = :OLD.DESCRIPCION THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ENCOMIENDA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','DESCRIPCION',:OLD.DESCRIPCION,:NEW.DESCRIPCION,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.NOMBRE_REMITENTE = :OLD.ID_ENCOMIENDA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ENCOMIENDA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','NOMBRE_REMITENTE',:OLD.NOMBRE_REMITENTE,:NEW.NOMBRE_REMITENTE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.NOMBRE_DESTINATARIO = :OLD.NOMBRE_DESTINATARIO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ENCOMIENDA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','NOMBRE_DESTINATARIO',:OLD.NOMBRE_DESTINATARIO,:NEW.NOMBRE_DESTINATARIO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.TELEFONO = :OLD.TELEFONO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ENCOMIENDA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','TELEFONO',:OLD.TELEFONO,:NEW.TELEFONO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_ENCOMIENDA
BEFORE DELETE ON ENCOMIENDA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','ID_ENCOMIENDA',:OLD.ID_ENCOMIENDA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','ID_VIAJE',:OLD.ID_VIAJE,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','PESO',:OLD.PESO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','PRECIO',:OLD.PRECIO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','DESCRIPCION',:OLD.DESCRIPCION,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','NOMBRE_REMITENTE',:OLD.NOMBRE_REMITENTE,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','NOMBRE_DESTINATARIO',:OLD.NOMBRE_DESTINATARIO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ENCOMIENDA','TELEFONO',:OLD.TELEFONO,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA TIPO_PAGO*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_TIPO_PAGO
BEFORE INSERT ON TIPO_PAGO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_PAGO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','ID_TIPO_PAGO','',:NEW.ID_TIPO_PAGO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_PAGO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.TIPO_PAGO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','TIPO_PAGO','',:NEW.TIPO_PAGO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_PAGO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.BANCO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','BANCO','',:NEW.BANCO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA TIPO_PAGO');
        END IF;      
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_TIPO_PAGO
BEFORE UPDATE ON TIPO_PAGO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_TIPO_PAGO = :OLD.ID_TIPO_PAGO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_PAGO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','ID_TIPO_PAGO',:OLD.ID_TIPO_PAGO,:NEW.ID_TIPO_PAGO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.TIPO_PAGO = :OLD.TIPO_PAGO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_PAGO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','TIPO_PAGO',:OLD.TIPO_PAGO,:NEW.TIPO_PAGO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.BANCO = :OLD.BANCO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA TIPO_PAGO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','BANCO',:OLD.BANCO,:NEW.BANCO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_TIPO_PAGO
BEFORE DELETE ON TIPO_PAGO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','ID_TIPO_PAGO',:OLD.ID_TIPO_PAGO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','TIPO_PAGO',:OLD.TIPO_PAGO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'TIPO_PAGO','BANCO',:OLD.BANCO,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA ESTADO_RESERVACION*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_ESTADO_RESERVACION
BEFORE INSERT ON ESTADO_RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_ESTADO_RESERVA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESTADO_RESERVACION','ID_ESTADO_RESERVA','',:NEW.ID_ESTADO_RESERVA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ESTADO_RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ESTADO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESTADO_RESERVACION','ESTADO','',:NEW.ESTADO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA ESTADO_RESERVACION');
        END IF;
         
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_ESTADO_RESERVACION
BEFORE UPDATE ON ESTADO_RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_ESTADO_RESERVA = :OLD.ID_ESTADO_RESERVA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ESTADO_RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESTADO_RESERVACION','ID_ESTADO_RESERVA',:OLD.ID_ESTADO_RESERVA,:NEW.ID_ESTADO_RESERVA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ESTADO = :OLD.ESTADO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA ESTADO_RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESTADO_RESERVACION','ESTADO',:OLD.ESTADO,:NEW.ESTADO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_ESTADO_RESERVACION
BEFORE DELETE ON ESTADO_RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESTADO_RESERVACION','ID_ESTADO_RESERVA',:OLD.ID_ESTADO_RESERVA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'ESTADO_RESERVACION','ESTADO',:OLD.ESTADO,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA AUTORIZA_RESERVA*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_AUTORIZA_RESERVA
BEFORE INSERT ON AUTORIZA_RESERVA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.CORRELATIVO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','CORRELATIVO','',:NEW.CORRELATIVO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA AUTORIZA_RESERVA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_PAGO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','ID_TIPO_PAGO','',:NEW.ID_TIPO_PAGO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA AUTORIZA_RESERVA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_ESTADO_RESERVA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','ID_ESTADO_RESERVA','',:NEW.ID_ESTADO_RESERVA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA AUTORIZA_RESERVA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.AUTORIZADO_POR IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','AUTORIZADO_POR','',:NEW.AUTORIZADO_POR,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA AUTORIZA_RESERVA');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.FECHA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','FECHA','',:NEW.FECHA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA AUTORIZA_RESERVA');
        END IF; 
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_AUTORIZA_RESERVA
BEFORE UPDATE ON AUTORIZA_RESERVA
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.CORRELATIVO = :OLD.CORRELATIVO THEN
        DBMS_OUTPUT.PUT_LINE('se actualizo un dato en la tabla AUTORIZA_RESERVA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','CORRELATIVO',:OLD.CORRELATIVO,:NEW.CORRELATIVO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_TIPO_PAGO = :OLD.ID_TIPO_PAGO THEN
        DBMS_OUTPUT.PUT_LINE('se actualizo un dato en la tabla AUTORIZA_RESERVA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','ID_TIPO_PAGO',:OLD.ID_TIPO_PAGO,:NEW.ID_TIPO_PAGO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_ESTADO_RESERVA = :OLD.ID_ESTADO_RESERVA THEN
        DBMS_OUTPUT.PUT_LINE('se actualizo un dato en la tabla AUTORIZA_RESERVA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','ID_ESTADO_RESERVA',:OLD.ID_ESTADO_RESERVA,:NEW.ID_ESTADO_RESERVA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.AUTORIZADO_POR = :OLD.AUTORIZADO_POR THEN
        DBMS_OUTPUT.PUT_LINE('se actualizo un dato en la tabla AUTORIZA_RESERVA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','AUTORIZADO_POR',:OLD.AUTORIZADO_POR,:NEW.AUTORIZADO_POR,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.FECHA = :OLD.FECHA THEN
        DBMS_OUTPUT.PUT_LINE('se actualizo un dato en la tabla AUTORIZA_RESERVA');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','FECHA',:OLD.FECHA,:NEW.FECHA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;    
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_AUTORIZA_RESERVA
BEFORE DELETE ON AUTORIZA_RESERVA
FOR EACH ROW 
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','CORRELATIVO',:OLD.CORRELATIVO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','ID_TIPO_PAGO',:OLD.ID_TIPO_PAGO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','ID_ESTADO_RESERVA',:OLD.ID_ESTADO_RESERVA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','AUTORIZADO_POR',:OLD.AUTORIZADO_POR,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'AUTORIZA_RESERVA','FECHA',:OLD.FECHA,'',USER,SYSDATE,DIREC,'DELETE');
            
END;


/*TRIGGER DE LA TABLA RESERVACION*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_RESERVACION
BEFORE INSERT ON RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_RESERVACION IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_RESERVACION','',:NEW.ID_RESERVACION,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_ESTADO_RESERVA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_ESTADO_RESERVA','',:NEW.ID_ESTADO_RESERVA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_VIAJE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_VIAJE','',:NEW.ID_VIAJE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_TIPO_PAGO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_TIPO_PAGO','',:NEW.ID_TIPO_PAGO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.NOMBRE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','NOMBRE','',:NEW.NOMBRE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.APELLIDO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','APELLIDO','',:NEW.APELLIDO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.IMAGEN IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','IMAGEN','',:NEW.IMAGEN,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ASIENTO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ASIENTO','',:NEW.ASIENTO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA RESERVACION');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_RESERVACION
BEFORE UPDATE ON RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_RESERVACION = :OLD.ID_RESERVACION THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_RESERVACION',:OLD.ID_RESERVACION,:NEW.ID_RESERVACION,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_ESTADO_RESERVA = :OLD.ID_ESTADO_RESERVA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_ESTADO_RESERVA',:OLD.ID_ESTADO_RESERVA,:NEW.ID_ESTADO_RESERVA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_VIAJE = :OLD.ID_VIAJE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_VIAJE',:OLD.ID_VIAJE,:NEW.ID_VIAJE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_TIPO_PAGO = :OLD.ID_TIPO_PAGO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_TIPO_PAGO',:OLD.ID_TIPO_PAGO,:NEW.ID_TIPO_PAGO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.NOMBRE = :OLD.NOMBRE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','NOMBRE',:OLD.NOMBRE,:NEW.NOMBRE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.APELLIDO = :OLD.APELLIDO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','APELLIDO',:OLD.APELLIDO,:NEW.APELLIDO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.IMAGEN IS NOT NULL THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','IMAGEN',:OLD.IMAGEN,:NEW.IMAGEN,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ASIENTO = :OLD.ASIENTO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ASIENTO',:OLD.ASIENTO,:NEW.ASIENTO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_RESERVACION
BEFORE DELETE ON RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_RESERVACION',:OLD.ID_RESERVACION,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_ESTADO_RESERVA',:OLD.ID_ESTADO_RESERVA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_VIAJE',:OLD.ID_VIAJE,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ID_TIPO_PAGO',:OLD.ID_TIPO_PAGO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','NOMBRE',:OLD.NOMBRE,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','APELLIDO',:OLD.APELLIDO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','IMAGEN',:OLD.IMAGEN,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'RESERVACION','ASIENTO',:OLD.ASIENTO,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA DETALLE_RESERVACION*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_DETALLE_RESERVACION
BEFORE INSERT ON DETALLE_RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_DETALLE_RESERVA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_DETALLE_RESERVA','',:NEW.ID_DETALLE_RESERVA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_RESERVACION IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_RESERVACION','',:NEW.ID_RESERVACION,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_ENCOMIENDA IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_ENCOMIENDA','',:NEW.ID_ENCOMIENDA,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.PASAJERO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','PASAJERO','',:NEW.PASAJERO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_RESERVACION');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.TOTAL IS NOT NULL THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','TOTAL','',:NEW.TOTAL,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_RESERVACION');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_DETALLE_RESERVACION
BEFORE UPDATE ON DETALLE_RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_DETALLE_RESERVA = :OLD.ID_DETALLE_RESERVA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_DETALLE_RESERVA',:OLD.ID_DETALLE_RESERVA,:NEW.ID_DETALLE_RESERVA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_RESERVACION = :OLD.ID_RESERVACION THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_RESERVACION',:OLD.ID_RESERVACION,:NEW.ID_RESERVACION,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_ENCOMIENDA = :OLD.ID_ENCOMIENDA THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_ENCOMIENDA',:OLD.ID_ENCOMIENDA,:NEW.ID_ENCOMIENDA,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.PASAJERO = :OLD.PASAJERO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','PASAJERO',:OLD.PASAJERO,:NEW.PASAJERO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.TOTAL = :OLD.TOTAL THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_RESERVACION');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','TOTAL',:OLD.TOTAL,:NEW.TOTAL,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_DETALLE_RESERVACION
BEFORE DELETE ON DETALLE_RESERVACION
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_DETALLE_RESERVA',:OLD.ID_DETALLE_RESERVA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_RESERVACION',:OLD.ID_RESERVACION,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_ENCOMIENDA',:OLD.ID_ENCOMIENDA,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','PASAJERO',:OLD.PASAJERO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','TOTAL',:OLD.TOTAL,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*TRIGGER DE LA TABLA DETALLE_PAGO*/
/*INSERT*/
CREATE OR REPLACE TRIGGER TRG_INSERT_DETALLE_PAGO
BEFORE INSERT ON DETALLE_PAGO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_DETALLE_PAGO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','ID_DETALLE_PAGO','',:NEW.ID_DETALLE_PAGO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_PAGO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.ID_RESERVACION IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','ID_RESERVACION','',:NEW.ID_RESERVACION,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_PAGO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.CANTIDAD IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','CANTIDAD','',:NEW.CANTIDAD,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_PAGO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.PRECIO IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','PRECIO','',:NEW.PRECIO,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_PAGO');
        END IF;
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF  :NEW.SERIE IS NOT NULL  THEN
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','SERIE',:NEW.SERIE,:NEW.SERIE,USER,SYSDATE,DIREC,'INSERT');
        ELSE
        DBMS_OUTPUT.PUT_LINE('SE INSERTO UN DATO EN LA TABLA DETALLE_PAGO');
        END IF;
END;
/*UPDATE*/
CREATE OR REPLACE TRIGGER TRG_UPDATE_DETALLE_PAGO
BEFORE UPDATE ON DETALLE_PAGO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
        IF :NEW.ID_DETALLE_PAGO = :OLD.ID_DETALLE_PAGO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_PAGO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_DETALLE_PAGO',:OLD.ID_DETALLE_PAGO,:NEW.ID_DETALLE_PAGO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.ID_RESERVACION = :OLD.ID_RESERVACION THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_PAGO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','ID_RESERVACION',:OLD.ID_RESERVACION,:NEW.ID_RESERVACION,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.CANTIDAD = :OLD.CANTIDAD THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_PAGO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','CANTIDAD',:OLD.CANTIDAD,:NEW.CANTIDAD,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.PRECIO = :OLD.PRECIO THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_PAGO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','PRECIO',:OLD.PRECIO,:NEW.PRECIO,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
        IF :NEW.SERIE = :OLD.SERIE THEN
        DBMS_OUTPUT.PUT_LINE('SE ACTUALIZO UN DATO EN LA TABLA DETALLE_PAGO');
        ELSE 
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_RESERVACION','SERIE',:OLD.SERIE,:NEW.SERIE,USER,SYSDATE,DIREC,'UPDATE');
        END IF;
END;
/*DELETE*/
CREATE OR REPLACE TRIGGER TRG_DELETE_DETALLE_PAGO
BEFORE DELETE ON DETALLE_PAGO
FOR EACH ROW
DECLARE
DIREC VARCHAR2(30);
BEGIN
        SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO DIREC  FROM DUAL;
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','ID_DETALLE_PAGO',:OLD.ID_DETALLE_PAGO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','ID_RESERVACION',:OLD.ID_RESERVACION,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','CANTIDAD',:OLD.CANTIDAD,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','PRECIO',:OLD.PRECIO,'',USER,SYSDATE,DIREC,'DELETE');
            
            INSERT INTO BITACORA (CORRELATIVO,NOMBRE_TABLA,ATRIBUTO,VALOR_ANTIGUO,VALOR_NUEVO,USUARIO,FECHA,IP,TIPO_ACCION)
            VALUES (SQC_BITACORA.NEXTVAL,'DETALLE_PAGO','SERIE',:OLD.SERIE,'',USER,SYSDATE,DIREC,'DELETE');
END;


/*--------------------------------------------------VALORES EN LAS TABLAS-----------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------------------------------*/

DROP TABLE BITACORA;
DROP SEQUENCE SQC_BITACORA;

/*VALORES DE LA TABLA DEPARTAMENTO*/
SELECT * FROM DEPARTAMENTO;
INSERT INTO DEPARTAMENTO (ID_DEPTO,DEPARTAMENTO) VALUES (SQC_DEPARTAMENTO.NEXTVAL,'COLOMBIA');
UPDATE DEPARTAMENTO SET ID_DEPTO = 50 WHERE DEPARTAMENTO = 'brasil';
DELETE FROM DEPARTAMENTO WHERE ID_DEPTO= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA CABECERA*/
SELECT * FROM CABECERA;
INSERT INTO CABECERA (ID_CABECERA,CABECERA,ID_DEPTO) VALUES (SQC_CABECERA.NEXTVAL,'manta',50);
UPDATE CABECERA SET ID_CABECERA = 4 WHERE CABECERA = 'santa rosa';
DELETE FROM CABECERA WHERE ID_CABECERA= 4;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA TIPO_VIAJE*/
SELECT * FROM TIPO_VIAJE;
INSERT INTO TIPO_VIAJE (ID_TIPO_VIAJE,TIPO) VALUES (SQC_TIPO_VIAJE.NEXTVAL,'oro');
UPDATE TIPO_VIAJE SET ID_TIPO_VIAJE = 4 WHERE TIPO = 'premium';
DELETE FROM TIPO_VIAJE WHERE ID_TIPO_VIAJE= 22;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA CATEGORIA*/
SELECT * FROM CATEGORIA;
INSERT INTO CATEGORIA (ID_CATEGORIA,CATEGORIA) VALUES (SQC_CATEGORIA.NEXTVAL,'nivel1');
UPDATE CATEGORIA SET ID_CATEGORIA = 4 WHERE CATEGORIA = 'nivel1';
UPDATE CATEGORIA SET CATEGORIA = 'nivel4' WHERE ID_CATEGORIA = 2;
DELETE FROM CATEGORIA WHERE ID_CABECERA= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA TIPO_PLACA*/
SELECT * FROM TIPO_PLACA;
INSERT INTO TIPO_PLACA (ID_TIPO_PLACA,TIPO_PLACA) VALUES (SQC_TIPO_PLACA.NEXTVAL,'A');
UPDATE TIPO_PLACA SET ID_TIPO_PLACA = 5 WHERE TIPO_PLACA = 'A';
UPDATE TIPO_PLACA SET TIPO_PLACA = 'Z' WHERE ID_TIPO_PLACA = 2;
DELETE FROM TIPO_PLACA WHERE ID_TIPO_PLACA= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA MARCA*/
SELECT * FROM MARCA;
INSERT INTO MARCA (ID_MARCA,MARCA) VALUES (SQC_MARCA.NEXTVAL,'PUMA');
UPDATE MARCA SET ID_MARCA = 5 WHERE MARCA = 'PUMA';
UPDATE MARCA SET MARCA = 'LEON' WHERE ID_MARCA = 2;
DELETE FROM MARCA WHERE ID_MARCA= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA LINEA*/
SELECT * FROM LINEA;
INSERT INTO LINEA (ID_LINEA,LINEA,ID_MARCA) VALUES (SQC_LINEA.NEXTVAL,'PACIFICO',2);
UPDATE LINEA SET ID_LINEA = 5 WHERE LINEA = 'PACIFICO';
UPDATE LINEA SET LINEA = 'OCEANO' WHERE ID_LINEA = 2;
DELETE FROM LINEA WHERE ID_LINEA= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA COLOR*/
SELECT * FROM COLOR;
INSERT INTO COLOR (ID_COLOR,COLOR) VALUES (SQC_COLOR.NEXTVAL,'AZUL');
UPDATE COLOR SET ID_COLOR = 5 WHERE COLOR = 'AZUL';
UPDATE COLOR SET COLOR = 'MORADO' WHERE ID_COLOR = 2;
DELETE FROM COLOR WHERE ID_COLOR= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA TIPO_BUS*/
SELECT * FROM TIPO_BUS;
INSERT INTO TIPO_BUS (ID_TIPO_BUS,TIPO_BUS) VALUES (SQC_TIPO_BUS.NEXTVAL,'AVE');
UPDATE TIPO_BUS SET ID_TIPO_BUS = 5 WHERE TIPO_BUS = 'AVE';
UPDATE TIPO_BUS SET TIPO_BUS = 'MORADO' WHERE ID_TIPO_BUS = 2;
DELETE FROM TIPO_BUS WHERE ID_TIPO_BUS= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA BUS*/
SELECT * FROM BUS;
INSERT INTO BUS (ID_BUS,PLACA,ANIO,NO_PASAJEROS,ESTADO_BUS,ID_TIPO_BUS,ID_TIPO_PLACA,ID_COLOR,ID_LINEA)
        VALUES (SQC_BUS.NEXTVAL,'FF4','02/06/2021',5,'BUENO',2,2,2,2);
UPDATE BUS SET ID_BUS = 5 WHERE PLACA = 'FF4';
UPDATE BUS SET PLACA = 'HH8' WHERE ID_BUS = 2;
DELETE FROM BUS WHERE ID_BUS= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA TIPO_LICENCIA*/
SELECT * FROM TIPO_LICENCIA;
INSERT INTO TIPO_LICENCIA (ID_TIPO_LICENCIA,TIPO_LICENCIA,ESTADO_LICENCIA) VALUES (SQC_TIPO_LICENCIA.NEXTVAL,'A8','ACTIVA');
UPDATE TIPO_LICENCIA SET ID_TIPO_LICENCIA = 5 WHERE TIPO_LICENCIA = 'A8';
UPDATE TIPO_LICENCIA SET TIPO_LICENCIA = 'A8' WHERE ID_TIPO_LICENCIA = 2;
DELETE FROM TIPO_LICENCIA WHERE ID_TIPO_LICENCIA= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA PILOTO*/
SELECT * FROM PILOTO;
INSERT INTO PILTO (ID_PILTO,NOMBRE,APELLIDO,ESTADO_PILOTO,NUMERO_LICENCIA,ID_TIPO_LICENCIA)
        VALUES (SQC_PILTO.NEXTVAL,'PEDRO','PUAC','ACTIVO',22H,2);
UPDATE PILTO SET ID_PILTO = 5 WHERE NOMBRE = 'PEDRO';
UPDATE PILTO SET NOMBRE = 'HH8' WHERE ID_PILTO = 2;
DELETE FROM PILTO WHERE ID_PILTO= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA VIAJE*/
SELECT * FROM VIAJE;
INSERT INTO VIAJE (ID_VIAJE,ID_CABECERA_INICIO,ID_CABECERA_DESTINO,ID_TIPO_VIAJE,ID_TIPO_PILOTO,ID_BUS,ID_CATEGORIA,ESCALA,FECHA_HORA_SALIDA,FECHA_HORA_LLEGADA)
        VALUES (SQC_VIAJE.NEXTVAL,1,1,1,1,1,1,'MAXIMA','','');
UPDATE VIAJE SET ID_VIAJE = 5 WHERE ESCALA = 'MAXIMA';
UPDATE VIAJE SET ESCALA = 'MAYOR' WHERE ID_VIAJE = 2;
DELETE FROM VIAJE WHERE ID_VIAJE= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA ESCALA_VIAJE*/
SELECT * FROM ESCALA_VIAJE;
INSERT INTO ESCALA_VIAJE (ID_ESCALA_VIAJE,ID_VIAJE,ID_CABECERA_ESCALA) VALUES (SQC_ESCALA_VIAJE.NEXTVAL,1,1);
UPDATE ESCALA_VIAJE SET ID_ESCALA_VIAJE = 5 WHERE ID_VIAJE = 2;
UPDATE ESCALA_VIAJE SET ID_VIAJE = 1 WHERE ID_ESCALA_VIAJE = 2;
DELETE FROM ESCALA_VIAJE WHERE ID_ESCALA_VIAJE = 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA ENCOMIENDA*/
SELECT * FROM ENCOMIENDA;
INSERT INTO ENCOMIENDA (ID_ENCOMIENDA,ID_VIAJE,PESO,PRECIO,DESCRIPCION,NOMBRE_REMITENTE,NOMBRE_DESTINATARIO,TELEFONO)
        VALUES (SQC_ENCOMIENDA.NEXTVAL,2,7.2,25.5,'CARRO','MARIA','JULIO',253-563);
UPDATE ENCOMIENDA SET ID_ENCOMIENDA = 5 WHERE NOMBRE_REMITENTE = 'MARIA';
UPDATE ENCOMIENDA SET NOMBRE_REMITENTE = 'HUGO' WHERE ID_ENCOMIENDA = 2;
DELETE FROM ENCOMIENDA WHERE ID_ENCOMIENDA= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA TIPO_PAGO*/
SELECT * FROM TIPO_PAGO;
INSERT INTO TIPO_PAGO (ID_TIPO_PAGO,TIPO_PAGO,BANCO) VALUES (SQC_TIPO_PAGO.NEXTVAL,'EFECTIVO','BAC');
UPDATE TIPO_PAGO SET ID_TIPO_PAGO = 5 WHERE TIPO_PAGO = 'MARIA';
DELETE FROM TIPO_PAGO WHERE ID_TIPO_PAGO= 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA ESTADO_RESERVACION*/
SELECT * FROM ESTADO_RESERVACION;
INSERT INTO ESTADO_RESERVACION (ID_ESTADO_RESERVACION,ESTADO) VALUES (SQC_ESTADO_RESERVACION.NEXTVAL,'RESERVADO');
UPDATE ESTADO_RESERVACION SET ID_ESTADO_RESERVACION = 5 WHERE ESTADO = 'RESERVADO';
DELETE FROM ESTADO_RESERVACION WHERE ID_ESTADO_RESERVACION = 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA AUTORIZA_RESERVA*/
SELECT * FROM AUTORIZA_RESERVA;
INSERT INTO AUTORIZA_RESERVA (CORRELATIVO,ID_TIPO_PAGO,ID_ESTADO_RESERVA,AUTORIZADO_POR,FECHA)
    VALUES (SQC_AUTORIZA_RESERVA.NEXTVAL,2,2,'PEDRO',DATESYSTEM);
UPDATE AUTORIZA_RESERVA SET CORRELATIVO = 5 WHERE AUTORIZADO_POR = 'PEDRO';
DELETE FROM AUTORIZA_RESERVA WHERE CORRELATIVO = 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA RESERVACION*/
SELECT * FROM RESERVACION;
INSERT INTO RESERVACION (ID_RESERVACION,ID_ESTADO_RESERVA,ID_VIAJE,ID_TIPO_PAGO,NOMBRE,APELLIDO,IMAGEN,ASIENTO) 
    VALUES (SQC_RESERVACION.NEXTVAL,1,1,1,'NOA','FRITZ','',2);
UPDATE RESERVACION SET ID_RESERVACION = 5 WHERE NOMBRE = 'NOA';
DELETE FROM RESERVACION WHERE ID_RESERVACION = 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA DETALLE_RESERVACION*/
SELECT * FROM DETALLE_RESERVACION;
INSERT INTO DETALLE_RESERVACION (ID_DETALLE_RESERVA,ID_RESERVACION,ID_ENCOMIENDA,PASAJERO,TOTAL)
    VALUES (SQC_DETALLE_RESERVACION.NEXTVAL,2,2,5,20);
UPDATE DETALLE_RESERVACION SET ID_DETALLE_RESERVA = 5 WHERE ID_RESERVACION = 2;
DELETE FROM DETALLE_RESERVACION WHERE ID_DETALLE_RESERVA = 2;
SELECT * FROM BITACORA;

/*VALORES DE LA TABLA DETALLE_PAGO*/
SELECT * FROM DETALLE_PAGO;
INSERT INTO DETALLE_PAGO (ID_DETALLE_PAGO,ID_RESERVACION,CANTIDAD,PRECIO,SERIE)
    VALUES (SQC_DETALLE_PAGO.NEXTVAL,1,10,120,'A12');
UPDATE DETALLE_PAGO SET ID_DETALLE_PAGO = 5 WHERE SERIE = 'A12';
DELETE FROM DETALLE_PAGO WHERE ID_DETALLE_PAGO = 2;
SELECT * FROM BITACORA;



/*******************************************0ELIMINAR TABLAS, SECUENCIAS* TRIGGERS************************************************/
/*TABLAS*/
DROP TABLE ESCALA_VIAJE;
DROP TABLE DETALLE_RESERVACION;
DROP TABLE DETALLE_PAGO;
DROP TABLE BITACORA;
DROP TABLE AUTORIZA_RESERVA;
DROP TABLE RESERVACION;
DROP TABLE ESTADO_RESERVACION;
DROP TABLE ENCOMIENDA;
DROP TABLE VIAJE;
DROP TABLE TIPO_VIAJE;
DROP TABLE TIPO_PAGO;
DROP TABLE PILOTO;
DROP TABLE TIPO_LICENCIA;
DROP TABLE CATEGORIA;
DROP TABLE CABECERA;
DROP TABLE DEPARTAMENTO;
DROP TABLE BUS;
DROP TABLE TIPO_PLACA;
DROP TABLE TIPO_BUS;
DROP TABLE LINEA;
DROP TABLE MARCA;
DROP TABLE COLOR;

/*ELIMINAR SECUENCIAS*/
DROP SEQUENCE SQC_VIAJE;
DROP SEQUENCE SQC_TIPO_VIAJE;
DROP SEQUENCE SQC_TIPO_PLACA;
DROP SEQUENCE SQC_TIPO_PAGO;
DROP SEQUENCE SQC_TIPO_LICENCIA;
DROP SEQUENCE SQC_TIPO_BUS;
DROP SEQUENCE SQC_RESERVACION;
DROP SEQUENCE SQC_PILOTO;
DROP SEQUENCE SQC_MARCA;
DROP SEQUENCE SQC_LINEA;
DROP SEQUENCE SQC_ESTADO_RESERVACION;
DROP SEQUENCE SQC_ESCALA_VIAJE;
DROP SEQUENCE SQC_ENCOMIENDA;
DROP SEQUENCE SQC_DETALLE_RESERVACION;
DROP SEQUENCE SQC_DETALLE_PAGO;
DROP SEQUENCE SQC_DEPARTAMENTO;
DROP SEQUENCE SQC_COLOR;
DROP SEQUENCE SQC_CATEGORIA;
DROP SEQUENCE SQC_CABECERA;
DROP SEQUENCE SQC_BUS;
DROP SEQUENCE SQC_BITACORA;
DROP SEQUENCE SQC_AUTORIZA_RESERVA;


/*ELIMINAR TRIGGERS*/
DROP TRIGGER TRG_INSERT_VIAJE;
DROP TRIGGER TRG_UPDATE_VIAJE;
DROP TRIGGER TRG_DELETE_VIAJE;
DROP TRIGGER TRG_INSERT_TIPO_VIAJE;
DROP TRIGGER TRG_UPDATE_TIPO_VIAJE;
DROP TRIGGER TRG_DELETE_TIPO_VIAJE;
DROP TRIGGER TRG_INSERT_TIPO_PLACA;
DROP TRIGGER TRG_UPDATE_TIPO_PLACA;
DROP TRIGGER TRG_DELETE_TIPO_PLACA;
DROP TRIGGER TRG_INSERT_TIPO_PAGO;
DROP TRIGGER TRG_UPDATE_TIPO_PAGO;
DROP TRIGGER TRG_DELETE_TIPO_PAGO;
DROP TRIGGER TRG_INSERT_TIPO_LICENCIA;
DROP TRIGGER TRG_UPDATE_TIPO_LICENCIA;
DROP TRIGGER TRG_DELETE_TIPO_LICENCIA;
DROP TRIGGER TRG_INSERT_TIPO_BUS;
DROP TRIGGER TRG_UPDATE_TIPO_BUS;
DROP TRIGGER TRG_DELETE_TIPO_BUS;
DROP TRIGGER TRG_INSERT_RESERVACION;
DROP TRIGGER TRG_UPDATE_RESERVACION;
DROP TRIGGER TRG_DELETE_RESERVACION;
DROP TRIGGER TRG_INSERT_PILOTO;
DROP TRIGGER TRG_UPDATE_PILOTO;
DROP TRIGGER TRG_DELETE_PILOTO;
DROP TRIGGER TRG_INSERT_MARCA;
DROP TRIGGER TRG_UPDATE_MARCA;
DROP TRIGGER TRG_DELETE_MARCA;
DROP TRIGGER TRG_INSERT_LINEA;
DROP TRIGGER TRG_UPDATE_LINEA;
DROP TRIGGER TRG_DELETE_LINEA;
DROP TRIGGER TRG_INSERT_ESTADO_RESERVACION;
DROP TRIGGER TRG_UPDATE_ESTADO_RESERVACION;
DROP TRIGGER TRG_DELETE_ESTADO_RESERVACION;
DROP TRIGGER TRG_INSERT_ESCALA_VIAJE;
DROP TRIGGER TRG_UPDATE_ESCALA_VIAJE;
DROP TRIGGER TRG_DELETE_ESCALA_VIAJE;
DROP TRIGGER TRG_INSERT_ENCOMIENDA;
DROP TRIGGER TRG_UPDATE_ENCOMIENDA;
DROP TRIGGER TRG_DELETE_ENCOMIENDA;
DROP TRIGGER TRG_INSERT_DETALLE_RESERVACION;
DROP TRIGGER TRG_UPDATE_DETALLE_RESERVACION;
DROP TRIGGER TRG_DELETE_DETALLE_RESERVACION;
DROP TRIGGER TRG_INSERT_DETALLE_PAGO;
DROP TRIGGER TRG_UPDATE_DETALLE_PAGO;
DROP TRIGGER TRG_DELETE_DETALLE_PAGO;
DROP TRIGGER TRG_INSERT_DEPARTAMENTO;
DROP TRIGGER TRG_UPDATE_DEPARTAMENTO;
DROP TRIGGER TRG_DELETE_DEPARTAMENTO;
DROP TRIGGER TRG_INSERT_COLOR;
DROP TRIGGER TRG_UPDATE_COLOR;
DROP TRIGGER TRG_DELETE_COLOR;
DROP TRIGGER TRG_INSERT_CATEGORIA;
DROP TRIGGER TRG_UPDATE_CATEGORIA;
DROP TRIGGER TRG_DELETE_CATEGORIA;
DROP TRIGGER TRG_INSERT_CABECERA;
DROP TRIGGER TRG_UPDATE_CABECERA;
DROP TRIGGER TRG_DELETE_CABECERA;
DROP TRIGGER TRG_INSERT_BUS;
DROP TRIGGER TRG_UPDATE_BUS;
DROP TRIGGER TRG_DELETE_BUS;
DROP TRIGGER TRG_INSERT_AUTORIZA_RESERVA;
DROP TRIGGER TRG_UPDATE_AUTORIZA_RESERVA;
DROP TRIGGER TRG_DELETE_AUTORIZA_RESERVA;



